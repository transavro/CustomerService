// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Service.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageType int32

const (
	MessageType_REQUEST_MESSAGE MessageType = 0
	MessageType_REPONSE_MESSAGE MessageType = 1
)

var MessageType_name = map[int32]string{
	0: "REQUEST_MESSAGE",
	1: "REPONSE_MESSAGE",
}

var MessageType_value = map[string]int32{
	"REQUEST_MESSAGE": 0,
	"REPONSE_MESSAGE": 1,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}

func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{0}
}

type None struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *None) Reset()         { *m = None{} }
func (m *None) String() string { return proto.CompactTextString(m) }
func (*None) ProtoMessage()    {}
func (*None) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{0}
}

func (m *None) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_None.Unmarshal(m, b)
}
func (m *None) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_None.Marshal(b, m, deterministic)
}
func (m *None) XXX_Merge(src proto.Message) {
	xxx_messageInfo_None.Merge(m, src)
}
func (m *None) XXX_Size() int {
	return xxx_messageInfo_None.Size(m)
}
func (m *None) XXX_DiscardUnknown() {
	xxx_messageInfo_None.DiscardUnknown(m)
}

var xxx_messageInfo_None proto.InternalMessageInfo

type RequestAuthorize struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestAuthorize) Reset()         { *m = RequestAuthorize{} }
func (m *RequestAuthorize) String() string { return proto.CompactTextString(m) }
func (*RequestAuthorize) ProtoMessage()    {}
func (*RequestAuthorize) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{1}
}

func (m *RequestAuthorize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestAuthorize.Unmarshal(m, b)
}
func (m *RequestAuthorize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestAuthorize.Marshal(b, m, deterministic)
}
func (m *RequestAuthorize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestAuthorize.Merge(m, src)
}
func (m *RequestAuthorize) XXX_Size() int {
	return xxx_messageInfo_RequestAuthorize.Size(m)
}
func (m *RequestAuthorize) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestAuthorize.DiscardUnknown(m)
}

var xxx_messageInfo_RequestAuthorize proto.InternalMessageInfo

func (m *RequestAuthorize) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ResponseAuthorize struct {
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseAuthorize) Reset()         { *m = ResponseAuthorize{} }
func (m *ResponseAuthorize) String() string { return proto.CompactTextString(m) }
func (*ResponseAuthorize) ProtoMessage()    {}
func (*ResponseAuthorize) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{2}
}

func (m *ResponseAuthorize) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseAuthorize.Unmarshal(m, b)
}
func (m *ResponseAuthorize) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseAuthorize.Marshal(b, m, deterministic)
}
func (m *ResponseAuthorize) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseAuthorize.Merge(m, src)
}
func (m *ResponseAuthorize) XXX_Size() int {
	return xxx_messageInfo_ResponseAuthorize.Size(m)
}
func (m *ResponseAuthorize) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseAuthorize.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseAuthorize proto.InternalMessageInfo

func (m *ResponseAuthorize) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type RequestConnect struct {
	SessionId            []byte   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestConnect) Reset()         { *m = RequestConnect{} }
func (m *RequestConnect) String() string { return proto.CompactTextString(m) }
func (*RequestConnect) ProtoMessage()    {}
func (*RequestConnect) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{3}
}

func (m *RequestConnect) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestConnect.Unmarshal(m, b)
}
func (m *RequestConnect) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestConnect.Marshal(b, m, deterministic)
}
func (m *RequestConnect) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestConnect.Merge(m, src)
}
func (m *RequestConnect) XXX_Size() int {
	return xxx_messageInfo_RequestConnect.Size(m)
}
func (m *RequestConnect) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestConnect.DiscardUnknown(m)
}

var xxx_messageInfo_RequestConnect proto.InternalMessageInfo

func (m *RequestConnect) GetSessionId() []byte {
	if m != nil {
		return m.SessionId
	}
	return nil
}

type CommandSay struct {
	SourceName           string   `protobuf:"bytes,1,opt,name=sourceName,proto3" json:"sourceName,omitempty"`
	Message              *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TargetName           string   `protobuf:"bytes,3,opt,name=targetName,proto3" json:"targetName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandSay) Reset()         { *m = CommandSay{} }
func (m *CommandSay) String() string { return proto.CompactTextString(m) }
func (*CommandSay) ProtoMessage()    {}
func (*CommandSay) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{4}
}

func (m *CommandSay) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandSay.Unmarshal(m, b)
}
func (m *CommandSay) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandSay.Marshal(b, m, deterministic)
}
func (m *CommandSay) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandSay.Merge(m, src)
}
func (m *CommandSay) XXX_Size() int {
	return xxx_messageInfo_CommandSay.Size(m)
}
func (m *CommandSay) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandSay.DiscardUnknown(m)
}

var xxx_messageInfo_CommandSay proto.InternalMessageInfo

func (m *CommandSay) GetSourceName() string {
	if m != nil {
		return m.SourceName
	}
	return ""
}

func (m *CommandSay) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *CommandSay) GetTargetName() string {
	if m != nil {
		return m.TargetName
	}
	return ""
}

type Message struct {
	MessageType          MessageType `protobuf:"varint,1,opt,name=messageType,proto3,enum=main.MessageType" json:"messageType,omitempty"`
	Command              string      `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{5}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_REQUEST_MESSAGE
}

func (m *Message) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

type Event struct {
	// Types that are valid to be assigned to Status:
	//	*Event_None
	//	*Event_Join
	//	*Event_Leave
	//	*Event_Log
	Status               isEvent_Status `protobuf_oneof:"Status"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{6}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Status interface {
	isEvent_Status()
}

type Event_None struct {
	None *EventNone `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type Event_Join struct {
	Join *EventJoin `protobuf:"bytes,2,opt,name=join,proto3,oneof"`
}

type Event_Leave struct {
	Leave *EventLeave `protobuf:"bytes,3,opt,name=leave,proto3,oneof"`
}

type Event_Log struct {
	Log *EventLog `protobuf:"bytes,4,opt,name=log,proto3,oneof"`
}

func (*Event_None) isEvent_Status() {}

func (*Event_Join) isEvent_Status() {}

func (*Event_Leave) isEvent_Status() {}

func (*Event_Log) isEvent_Status() {}

func (m *Event) GetStatus() isEvent_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Event) GetNone() *EventNone {
	if x, ok := m.GetStatus().(*Event_None); ok {
		return x.None
	}
	return nil
}

func (m *Event) GetJoin() *EventJoin {
	if x, ok := m.GetStatus().(*Event_Join); ok {
		return x.Join
	}
	return nil
}

func (m *Event) GetLeave() *EventLeave {
	if x, ok := m.GetStatus().(*Event_Leave); ok {
		return x.Leave
	}
	return nil
}

func (m *Event) GetLog() *EventLog {
	if x, ok := m.GetStatus().(*Event_Log); ok {
		return x.Log
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_None)(nil),
		(*Event_Join)(nil),
		(*Event_Leave)(nil),
		(*Event_Log)(nil),
	}
}

type EventNone struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventNone) Reset()         { *m = EventNone{} }
func (m *EventNone) String() string { return proto.CompactTextString(m) }
func (*EventNone) ProtoMessage()    {}
func (*EventNone) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{7}
}

func (m *EventNone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventNone.Unmarshal(m, b)
}
func (m *EventNone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventNone.Marshal(b, m, deterministic)
}
func (m *EventNone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventNone.Merge(m, src)
}
func (m *EventNone) XXX_Size() int {
	return xxx_messageInfo_EventNone.Size(m)
}
func (m *EventNone) XXX_DiscardUnknown() {
	xxx_messageInfo_EventNone.DiscardUnknown(m)
}

var xxx_messageInfo_EventNone proto.InternalMessageInfo

type EventJoin struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventJoin) Reset()         { *m = EventJoin{} }
func (m *EventJoin) String() string { return proto.CompactTextString(m) }
func (*EventJoin) ProtoMessage()    {}
func (*EventJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{8}
}

func (m *EventJoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventJoin.Unmarshal(m, b)
}
func (m *EventJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventJoin.Marshal(b, m, deterministic)
}
func (m *EventJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventJoin.Merge(m, src)
}
func (m *EventJoin) XXX_Size() int {
	return xxx_messageInfo_EventJoin.Size(m)
}
func (m *EventJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_EventJoin.DiscardUnknown(m)
}

var xxx_messageInfo_EventJoin proto.InternalMessageInfo

func (m *EventJoin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EventLeave struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventLeave) Reset()         { *m = EventLeave{} }
func (m *EventLeave) String() string { return proto.CompactTextString(m) }
func (*EventLeave) ProtoMessage()    {}
func (*EventLeave) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{9}
}

func (m *EventLeave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLeave.Unmarshal(m, b)
}
func (m *EventLeave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLeave.Marshal(b, m, deterministic)
}
func (m *EventLeave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLeave.Merge(m, src)
}
func (m *EventLeave) XXX_Size() int {
	return xxx_messageInfo_EventLeave.Size(m)
}
func (m *EventLeave) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLeave.DiscardUnknown(m)
}

var xxx_messageInfo_EventLeave proto.InternalMessageInfo

func (m *EventLeave) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EventLog struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message              *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventLog) Reset()         { *m = EventLog{} }
func (m *EventLog) String() string { return proto.CompactTextString(m) }
func (*EventLog) ProtoMessage()    {}
func (*EventLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_88420990119a24c7, []int{10}
}

func (m *EventLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventLog.Unmarshal(m, b)
}
func (m *EventLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventLog.Marshal(b, m, deterministic)
}
func (m *EventLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventLog.Merge(m, src)
}
func (m *EventLog) XXX_Size() int {
	return xxx_messageInfo_EventLog.Size(m)
}
func (m *EventLog) XXX_DiscardUnknown() {
	xxx_messageInfo_EventLog.DiscardUnknown(m)
}

var xxx_messageInfo_EventLog proto.InternalMessageInfo

func (m *EventLog) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventLog) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterEnum("main.MessageType", MessageType_name, MessageType_value)
	proto.RegisterType((*None)(nil), "main.None")
	proto.RegisterType((*RequestAuthorize)(nil), "main.RequestAuthorize")
	proto.RegisterType((*ResponseAuthorize)(nil), "main.ResponseAuthorize")
	proto.RegisterType((*RequestConnect)(nil), "main.RequestConnect")
	proto.RegisterType((*CommandSay)(nil), "main.CommandSay")
	proto.RegisterType((*Message)(nil), "main.Message")
	proto.RegisterType((*Event)(nil), "main.Event")
	proto.RegisterType((*EventNone)(nil), "main.EventNone")
	proto.RegisterType((*EventJoin)(nil), "main.EventJoin")
	proto.RegisterType((*EventLeave)(nil), "main.EventLeave")
	proto.RegisterType((*EventLog)(nil), "main.EventLog")
}

func init() {
	proto.RegisterFile("Service.proto", fileDescriptor_88420990119a24c7)
}

var fileDescriptor_88420990119a24c7 = []byte{
	// 469 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0x8d, 0x89, 0x9b, 0xd4, 0x63, 0x9a, 0xa4, 0x0b, 0x82, 0x28, 0x12, 0x10, 0x2d, 0x02, 0x22,
	0x0e, 0x01, 0xb9, 0x07, 0x2e, 0x5c, 0x4a, 0x64, 0x35, 0x20, 0x1a, 0x60, 0x5d, 0x24, 0x6e, 0x95,
	0x49, 0x46, 0xc1, 0xa8, 0xde, 0x0d, 0xde, 0x75, 0xa4, 0xf2, 0x7b, 0xb8, 0xf2, 0x1f, 0xd1, 0x7e,
	0xb8, 0x76, 0xab, 0x48, 0xf4, 0x66, 0xbf, 0xf7, 0xe6, 0xcd, 0xec, 0xee, 0x1b, 0x38, 0x48, 0xb0,
	0xd8, 0x66, 0x4b, 0x9c, 0x6e, 0x0a, 0xa1, 0x04, 0xf1, 0xf3, 0x34, 0xe3, 0xb4, 0x03, 0xfe, 0x42,
	0x70, 0xa4, 0xcf, 0x61, 0xc0, 0xf0, 0x57, 0x89, 0x52, 0x1d, 0x97, 0xea, 0x87, 0x28, 0xb2, 0xdf,
	0x48, 0x08, 0xf8, 0x3c, 0xcd, 0x71, 0xe8, 0x8d, 0xbd, 0x49, 0xc0, 0xcc, 0x37, 0x8d, 0xe0, 0x90,
	0xa1, 0xdc, 0x08, 0x2e, 0xb1, 0x16, 0x3e, 0x02, 0x90, 0x28, 0x65, 0x26, 0xf8, 0x79, 0xb6, 0x32,
	0xf2, 0xbb, 0x2c, 0x70, 0xc8, 0xfb, 0x15, 0x7d, 0x05, 0x3d, 0xe7, 0x3d, 0x13, 0x9c, 0xe3, 0x52,
	0xfd, 0xaf, 0xa0, 0x04, 0x98, 0x89, 0x3c, 0x4f, 0xf9, 0x2a, 0x49, 0x2f, 0xc9, 0x63, 0x00, 0x29,
	0xca, 0x62, 0x89, 0x8b, 0x7a, 0x98, 0x06, 0x42, 0x5e, 0x40, 0x37, 0x47, 0x29, 0xd3, 0x35, 0x0e,
	0xef, 0x8c, 0xbd, 0x49, 0x18, 0x1d, 0x4c, 0xf5, 0xd1, 0xa6, 0xa7, 0x16, 0x64, 0x15, 0xab, 0x8d,
	0x54, 0x5a, 0xac, 0x51, 0x19, 0xa3, 0xb6, 0x35, 0xaa, 0x11, 0xfa, 0x0d, 0xba, 0xae, 0x86, 0x1c,
	0x41, 0xe8, 0xaa, 0xce, 0x2e, 0x37, 0xb6, 0x69, 0x2f, 0x3a, 0xbc, 0xe6, 0xab, 0x09, 0xd6, 0x54,
	0x91, 0x21, 0x74, 0x97, 0x76, 0x6c, 0x33, 0x48, 0xc0, 0xaa, 0x5f, 0xfa, 0xd7, 0x83, 0xbd, 0x78,
	0x8b, 0x5c, 0x91, 0x67, 0xe0, 0x73, 0xc1, 0xad, 0x63, 0x18, 0xf5, 0xad, 0xa3, 0xa1, 0xf4, 0x33,
	0xcc, 0x5b, 0xcc, 0xd0, 0x5a, 0xf6, 0x53, 0x64, 0xdc, 0x1d, 0xa8, 0x29, 0xfb, 0x20, 0x32, 0xae,
	0x65, 0x9a, 0x26, 0x13, 0xd8, 0xbb, 0xc0, 0x74, 0x6b, 0x0f, 0x13, 0x46, 0x83, 0x86, 0xee, 0xa3,
	0xc6, 0xe7, 0x2d, 0x66, 0x05, 0x84, 0x42, 0xfb, 0x42, 0xac, 0x87, 0xbe, 0xd1, 0xf5, 0x9a, 0x3a,
	0xb1, 0x9e, 0xb7, 0x98, 0x26, 0xdf, 0xed, 0x43, 0x27, 0x51, 0xa9, 0x2a, 0x25, 0x0d, 0x21, 0xb8,
	0x9a, 0x89, 0x3e, 0x71, 0x3f, 0xba, 0xf3, 0xce, 0x4c, 0x8c, 0x01, 0xea, 0x96, 0x3b, 0x15, 0x27,
	0xb0, 0x5f, 0x35, 0xdb, 0xc5, 0xdf, 0xfa, 0x09, 0x5f, 0xbe, 0x81, 0xb0, 0x71, 0xfd, 0xe4, 0x1e,
	0xf4, 0x59, 0xfc, 0xe5, 0x6b, 0x9c, 0x9c, 0x9d, 0x9f, 0xc6, 0x49, 0x72, 0x7c, 0x12, 0x0f, 0x5a,
	0x16, 0xfc, 0xfc, 0x69, 0x91, 0xc4, 0x57, 0xa0, 0x17, 0xfd, 0xf1, 0xa0, 0x3f, 0x2b, 0xa5, 0x12,
	0x39, 0x16, 0x6e, 0x0f, 0xc8, 0x5b, 0x08, 0xea, 0x0c, 0x3f, 0xb0, 0x1d, 0x6f, 0x2e, 0xc1, 0xe8,
	0x61, 0x85, 0xdf, 0x0c, 0xfd, 0x14, 0xba, 0x55, 0x9c, 0xef, 0x5f, 0xab, 0x75, 0xe8, 0x28, 0x6c,
	0xdc, 0xf2, 0x6b, 0x8f, 0x3c, 0x85, 0xb6, 0x4e, 0xb3, 0x7b, 0xa3, 0x3a, 0xdf, 0x23, 0xb0, 0x88,
	0xbe, 0xeb, 0xef, 0x1d, 0xb3, 0x9b, 0x47, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x56, 0x72,
	0xc8, 0xac, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	Authorize(ctx context.Context, in *RequestAuthorize, opts ...grpc.CallOption) (*ResponseAuthorize, error)
	Connect(ctx context.Context, in *RequestConnect, opts ...grpc.CallOption) (CustomerService_ConnectClient, error)
	Say(ctx context.Context, in *CommandSay, opts ...grpc.CallOption) (*None, error)
}

type customerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomerServiceClient(cc grpc.ClientConnInterface) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) Authorize(ctx context.Context, in *RequestAuthorize, opts ...grpc.CallOption) (*ResponseAuthorize, error) {
	out := new(ResponseAuthorize)
	err := c.cc.Invoke(ctx, "/main.CustomerService/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) Connect(ctx context.Context, in *RequestConnect, opts ...grpc.CallOption) (CustomerService_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CustomerService_serviceDesc.Streams[0], "/main.CustomerService/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &customerServiceConnectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CustomerService_ConnectClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type customerServiceConnectClient struct {
	grpc.ClientStream
}

func (x *customerServiceConnectClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *customerServiceClient) Say(ctx context.Context, in *CommandSay, opts ...grpc.CallOption) (*None, error) {
	out := new(None)
	err := c.cc.Invoke(ctx, "/main.CustomerService/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	Authorize(context.Context, *RequestAuthorize) (*ResponseAuthorize, error)
	Connect(*RequestConnect, CustomerService_ConnectServer) error
	Say(context.Context, *CommandSay) (*None, error)
}

// UnimplementedCustomerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerServiceServer struct {
}

func (*UnimplementedCustomerServiceServer) Authorize(ctx context.Context, req *RequestAuthorize) (*ResponseAuthorize, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}
func (*UnimplementedCustomerServiceServer) Connect(req *RequestConnect, srv CustomerService_ConnectServer) error {
	return status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedCustomerServiceServer) Say(ctx context.Context, req *CommandSay) (*None, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Say not implemented")
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAuthorize)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.CustomerService/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).Authorize(ctx, req.(*RequestAuthorize))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestConnect)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CustomerServiceServer).Connect(m, &customerServiceConnectServer{stream})
}

type CustomerService_ConnectServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type customerServiceConnectServer struct {
	grpc.ServerStream
}

func (x *customerServiceConnectServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _CustomerService_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandSay)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.CustomerService/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).Say(ctx, req.(*CommandSay))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Authorize",
			Handler:    _CustomerService_Authorize_Handler,
		},
		{
			MethodName: "Say",
			Handler:    _CustomerService_Say_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _CustomerService_Connect_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "Service.proto",
}
